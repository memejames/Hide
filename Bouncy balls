local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=1;local v30;v27=v12(v11(v27,5),v7("\26\248","\218\52\214\209"),function(v42)if (v9(v42,2)==79) then v30=v8(v11(v42,1,1));return "";else local v100=0;local v101;while true do if (v100==0) then v101=v10(v8(v42,16));if v30 then local v120=0;local v121;while true do if (v120==0) then v121=v13(v101,v30);v30=nil;v120=1;end if (v120==1) then return v121;end end else return v101;end break;end end end end);local function v31(v43,v44,v45)if v45 then local v102=(v43/(2^(v44-1)))%((5 -3)^(((v45-1) -(v44-1)) + 1)) ;return v102-(v102%1) ;else local v103=2^(v44-(2 -1)) ;return (((v43%(v103 + v103))>=v103) and (1 -0)) or 0 ;end end local function v32()local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33()local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * 256) + v49 ;end if (0==v48) then v49,v50=v9(v27,v29,v29 + (4 -2) );v29=v29 + 2 ;v48=1;end end end local function v34()local v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + (623 -(555 + 64)) ;return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end local function v35()local v55=v34();local v56=v34();local v57=1;local v58=(v31(v56,1,20) * (2^32)) + v55 ;local v59=v31(v56,21,31);local v60=((v31(v56,963 -(857 + 74) )==1) and  -(569 -(367 + 201))) or 1 ;if (v59==0) then if (v58==0) then return v60 * 0 ;else local v110=0;while true do if (v110==0) then v59=1;v57=0;break;end end end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end local function v36(v61)local v62=0;local v63;local v64;while true do if (v62==0) then v63=nil;if  not v61 then v61=v34();if (v61==0) then return "";end end v62=1;end if (3==v62) then return v14(v64);end if (v62==1) then v63=v11(v27,v29,(v29 + v61) -(928 -(214 + 713)) );v29=v29 + v61 ;v62=2;end if (v62==2) then v64={};for v111=1, #v63 do v64[v111]=v10(v9(v11(v63,v111,v111)));end v62=3;end end end local v37=v34;local function v38(...)return {...},v20("#",...);end local function v39()local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v78=1 + 0 ,v69 do local v79=v32();local v80;if (v79==1) then v80=v32()~=0 ;elseif (v79==2) then v80=v35();elseif (v79==3) then v80=v36();end v70[v78]=v80;end v68[3]=v32();for v82=878 -(282 + 595) ,v34() do local v83=v32();if (v31(v83,1,1)==0) then local v106=0;local v107;local v108;local v109;while true do if (v106==3) then if (v31(v108,120 -(32 + 85) ,3)==1) then v109[4]=v70[v109[4 + 0 ]];end v65[v82]=v109;break;end if (v106==1) then v109={v33(),v33(),nil,nil};if (v107==0) then local v124=0;while true do if (v124==0) then v109[3]=v33();v109[4]=v33();break;end end elseif (v107==1) then v109[3]=v34();elseif (v107==2) then v109[1640 -(1523 + 114) ]=v34() -(2^16) ;elseif (v107==3) then local v133=0;while true do if (v133==0) then v109[3]=v34() -((2 + 0)^16) ;v109[4]=v33();break;end end end v106=2;end if (2==v106) then if (v31(v108,1,1 -0 )==1) then v109[2]=v70[v109[2]];end if (v31(v108,1067 -(68 + 997) ,1272 -(226 + 1044) )==1) then v109[12 -9 ]=v70[v109[3]];end v106=3;end if (v106==0) then v107=v31(v83,2,3);v108=v31(v83,4,6);v106=1;end end end end for v84=1,v34() do v66[v84-1 ]=v39();end return v68;end local function v40(v72,v73,v74)local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...)local v86=v75;local v87=v76;local v88=v77;local v89=v38;local v90=1;local v91= -1;local v92={};local v93={...};local v94=v20("#",...) -1 ;local v95={};local v96={};for v104=0,v94 do if (v104>=v88) then v92[v104-v88 ]=v93[v104 + 1 ];else v96[v104]=v93[v104 + 1 ];end end local v97=(v94-v88) + 1 ;local v98;local v99;while true do local v105=0;while true do if (v105==0) then v98=v86[v90];v99=v98[1 + 0 ];v105=1;end if (v105==1) then if (v99<=42) then if (v99<=20) then if (v99<=(966 -(892 + 65))) then if (v99<=4) then if (v99<=1) then if (v99>0) then v96[v98[2]]= #v96[v98[3]];else v96[v98[2]]=v98[7 -4 ] + v96[v98[4]] ;end elseif (v99<=2) then local v138=v98[2];local v139=v96[v98[3]];v96[v138 + 1 ]=v139;v96[v138]=v139[v98[4]];elseif (v99==3) then local v221=v98[2];do return v21(v96,v221,v91);end else local v222=v98[2];local v223,v224=v89(v96[v222](v21(v96,v222 + 1 ,v98[3])));v91=(v224 + v222) -1 ;local v225=0;for v302=v222,v91 do local v303=0;while true do if (0==v303) then v225=v225 + 1 ;v96[v302]=v223[v225];break;end end end end elseif (v99<=6) then if (v99==5) then local v143=0;local v144;while true do if (v143==0) then v144=v98[2];v96[v144](v96[v144 + 1 ]);break;end end else v96[v98[2]]=v96[v98[5 -2 ]] -v96[v98[4]] ;end elseif (v99<=(12 -5)) then v96[v98[2]]=v96[v98[3]] + v98[354 -(87 + 263) ] ;elseif (v99==8) then if (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else local v226=0;local v227;while true do if (v226==0) then v227=v98[2];v96[v227](v21(v96,v227 + 1 ,v98[3]));break;end end end elseif (v99<=14) then if (v99<=11) then if (v99>10) then v96[v98[2]]=v98[3] + v96[v98[4]] ;else v96[v98[2]]={};end elseif (v99<=12) then v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;elseif (v99==13) then local v228=v98[2];local v229={};for v305=181 -(67 + 113) , #v95 do local v306=v95[v305];for v316=0, #v306 do local v317=v306[v316];local v318=v317[1];local v319=v317[2];if ((v318==v96) and (v319>=v228)) then local v361=0;while true do if (0==v361) then v229[v319]=v318[v319];v317[1]=v229;break;end end end end end else v96[v98[2]]=v96[v98[3]]%v98[4] ;end elseif (v99<=17) then if (v99<=15) then local v150=0;local v151;local v152;local v153;while true do if (v150==1) then v153=v96[v151 + 2 ];if (v153>0) then if (v152>v96[v151 + 1 ]) then v90=v98[3];else v96[v151 + 3 ]=v152;end elseif (v152<v96[v151 + 1 ]) then v90=v98[3];else v96[v151 + 3 ]=v152;end break;end if (v150==0) then v151=v98[2];v152=v96[v151];v150=1;end end elseif (v99>16) then if (v96[v98[2]]~=v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]]={};end elseif (v99<=(14 + 4)) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[7 -4 ];end elseif (v99==19) then v96[v98[2 + 0 ]]=v96[v98[3]] -v96[v98[15 -11 ]] ;else local v234=0;local v235;while true do if (v234==0) then v235=v98[2];v96[v235]=v96[v235](v21(v96,v235 + 1 ,v91));break;end end end elseif (v99<=31) then if (v99<=25) then if (v99<=(974 -(802 + 150))) then if (v99==(56 -35)) then local v154=0;local v155;while true do if (v154==0) then v155=v98[2];do return v21(v96,v155,v91);end break;end end else for v204=v98[2],v98[3] do v96[v204]=nil;end end elseif (v99<=23) then if (v98[3 -1 ]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==24) then local v237=0;local v238;local v239;while true do if (v237==1) then v96[v238 + 1 ]=v239;v96[v238]=v239[v98[4]];break;end if (v237==0) then v238=v98[2];v239=v96[v98[3]];v237=1;end end else v96[v98[2]]=v96[v98[3]];end elseif (v99<=28) then if (v99<=26) then v96[v98[2]][v98[3]]=v98[3 + 1 ];elseif (v99==27) then local v242=0;local v243;local v244;local v245;local v246;while true do if (v242==0) then v243=v98[2];v244,v245=v89(v96[v243](v96[v243 + 1 ]));v242=1;end if (v242==1) then v91=(v245 + v243) -1 ;v246=0;v242=2;end if (v242==2) then for v362=v243,v91 do local v363=0;while true do if (0==v363) then v246=v246 + 1 ;v96[v362]=v244[v246];break;end end end break;end end else v96[v98[2]]=v98[3];end elseif (v99<=(1026 -(915 + 82))) then v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;elseif (v99>30) then local v249=v98[2];local v250=v96[v249 + 2 ];local v251=v96[v249] + v250 ;v96[v249]=v251;if (v250>0) then if (v251<=v96[v249 + 1 ]) then v90=v98[3];v96[v249 + 3 ]=v251;end elseif (v251>=v96[v249 + 1 ]) then local v366=0;while true do if (0==v366) then v90=v98[3];v96[v249 + (8 -5) ]=v251;break;end end end elseif (v96[v98[2]]~=v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=36) then if (v99<=33) then if (v99>(19 + 13)) then v96[v98[2]]=v73[v98[3 -0 ]];else v96[v98[2]]=v98[3]~=0 ;end elseif (v99<=34) then v96[v98[2]]=v96[v98[3]][v98[4]];elseif (v99==35) then v73[v98[1190 -(1069 + 118) ]]=v96[v98[2]];else v96[v98[2]]=v96[v98[3]] + v98[4] ;end elseif (v99<=39) then if (v99<=37) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==(85 -47)) then v96[v98[2]][v98[3]]=v96[v98[4]];else v96[v98[2]]=v98[3]~=0 ;end elseif (v99<=40) then v96[v98[2]]=v96[v98[3]] + v96[v98[8 -4 ]] ;elseif (v99==41) then v96[v98[1 + 1 ]]= #v96[v98[3]];else do return v96[v98[2]]();end end elseif (v99<=63) then if (v99<=52) then if (v99<=(83 -36)) then if (v99<=44) then if (v99>43) then do return;end else v96[v98[2]]=v96[v98[3]];end elseif (v99<=45) then local v167=0;local v168;while true do if (v167==0) then v168=v98[2];do return v96[v168](v21(v96,v168 + 1 ,v98[3]));end break;end end elseif (v99>46) then local v261=0;local v262;while true do if (v261==0) then v262=v98[2];v96[v262]=v96[v262](v21(v96,v262 + 1 ,v98[3]));break;end end else v90=v98[3 + 0 ];end elseif (v99<=49) then if (v99==48) then v96[v98[2]]=v96[v98[3]]%v98[4] ;elseif v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=50) then v96[v98[2]]=v98[3];elseif (v99==51) then if  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end else local v265=0;local v266;local v267;local v268;while true do if (1==v265) then v268={};v267=v18({},{[v7("\40\14\161\64\19\52\176","\46\119\81\200")]=function(v367,v368)local v369=0;local v370;while true do if (v369==0) then v370=v268[v368];return v370[1][v370[2]];end end end,[v7("\122\243\56\46\155\185\75\200\51\51","\208\37\172\86\75\236")]=function(v371,v372,v373)local v374=v268[v372];v374[792 -(368 + 423) ][v374[2]]=v373;end});v265=2;end if (v265==2) then for v376=1,v98[4] do local v377=0;local v378;while true do if (0==v377) then v90=v90 + 1 ;v378=v86[v90];v377=1;end if (v377==1) then if (v378[1]==25) then v268[v376-1 ]={v96,v378[3]};else v268[v376-1 ]={v73,v378[3]};end v95[ #v95 + 1 ]=v268;break;end end end v96[v98[2]]=v40(v266,v267,v74);break;end if (v265==0) then v266=v87[v98[3]];v267=nil;v265=1;end end end elseif (v99<=57) then if (v99<=(72 -(10 + 8))) then if (v99>53) then do return v96[v98[2]]();end else local v172=v98[7 -5 ];v96[v172](v21(v96,v172 + 1 ,v91));end elseif (v99<=55) then if  not v96[v98[444 -(416 + 26) ]] then v90=v90 + (3 -2) ;else v90=v98[3];end elseif (v99==56) then local v270=0;local v271;local v272;local v273;while true do if (v270==1) then v273=v96[v271] + v272 ;v96[v271]=v273;v270=2;end if (2==v270) then if (v272>0) then if (v273<=v96[v271 + 1 ]) then local v406=0;while true do if (0==v406) then v90=v98[2 + 1 ];v96[v271 + 3 ]=v273;break;end end end elseif (v273>=v96[v271 + 1 ]) then local v407=0;while true do if (v407==0) then v90=v98[3];v96[v271 + 3 ]=v273;break;end end end break;end if (v270==0) then v271=v98[2];v272=v96[v271 + 2 ];v270=1;end end else local v274=0;local v275;while true do if (v274==0) then v275=v98[2];v96[v275](v21(v96,v275 + 1 ,v91));break;end end end elseif (v99<=60) then if (v99<=58) then local v173=v98[2];local v174=v96[v173];local v175=v96[v173 + 2 ];if (v175>0) then if (v174>v96[v173 + 1 ]) then v90=v98[3];else v96[v173 + 3 ]=v174;end elseif (v174<v96[v173 + 1 ]) then v90=v98[3];else v96[v173 + (4 -1) ]=v174;end elseif (v99>59) then if (v96[v98[2]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else do return;end end elseif (v99<=61) then v96[v98[2]]=v74[v98[3]];elseif (v99>(500 -(145 + 293))) then local v276=0;local v277;local v278;while true do if (v276==0) then v277=v98[2];v278={};v276=1;end if (v276==1) then for v379=1, #v95 do local v380=0;local v381;while true do if (v380==0) then v381=v95[v379];for v409=0, #v381 do local v410=0;local v411;local v412;local v413;while true do if (v410==1) then v413=v411[2];if ((v412==v96) and (v413>=v277)) then local v423=0;while true do if (v423==0) then v278[v413]=v412[v413];v411[1]=v278;break;end end end break;end if (v410==0) then v411=v381[v409];v412=v411[431 -(44 + 386) ];v410=1;end end end break;end end end break;end end elseif (v96[v98[2]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[1489 -(998 + 488) ];end elseif (v99<=74) then if (v99<=68) then if (v99<=65) then if (v99>64) then v96[v98[2]]=v96[v98[3]] + v96[v98[4]] ;else local v179=v98[2];local v180=v96[v179];for v206=v179 + 1 ,v91 do v15(v180,v96[v206]);end end elseif (v99<=66) then local v181=v87[v98[3]];local v182;local v183={};v182=v18({},{[v7("\150\130\230\133\168\172\165","\204\201\221\143\235")]=function(v207,v208)local v209=v183[v208];return v209[1][v209[2]];end,[v7("\72\186\240\68\96\140\240\69\114\157","\33\23\229\158")]=function(v210,v211,v212)local v213=v183[v211];v213[1][v213[2]]=v212;end});for v215=1,v98[4] do local v216=0;local v217;while true do if (v216==0) then v90=v90 + 1 ;v217=v86[v90];v216=1;end if (v216==1) then if (v217[1]==25) then v183[v215-1 ]={v96,v217[3]};else v183[v215-1 ]={v73,v217[3]};end v95[ #v95 + 1 ]=v183;break;end end end v96[v98[2]]=v40(v181,v182,v74);elseif (v99==67) then local v279=v98[2];do return v96[v279](v21(v96,v279 + 1 ,v98[3]));end else local v280=v98[2 + 0 ];v96[v280]=v96[v280](v21(v96,v280 + 1 ,v98[775 -(201 + 571) ]));end elseif (v99<=71) then if (v99<=69) then v96[v98[2]]=v96[v98[3]][v98[4]];elseif (v99==70) then local v282=0;local v283;while true do if (0==v282) then v283=v98[2];v96[v283]=v96[v283](v21(v96,v283 + 1 ,v91));break;end end else local v284=0;local v285;local v286;local v287;local v288;while true do if (v284==1) then v91=(v287 + v285) -1 ;v288=0;v284=2;end if (v284==0) then v285=v98[2];v286,v287=v89(v96[v285](v96[v285 + 1 ]));v284=1;end if (v284==2) then for v384=v285,v91 do v288=v288 + 1 ;v96[v384]=v286[v288];end break;end end end elseif (v99<=(1210 -(116 + 1022))) then local v187=v98[8 -6 ];local v188=v96[v187];for v218=v187 + 1 ,v91 do v15(v188,v96[v218]);end elseif (v99==73) then for v312=v98[2],v98[3] do v96[v312]=nil;end else local v289=0;local v290;local v291;local v292;local v293;while true do if (v289==2) then for v387=v290,v91 do v293=v293 + 1 ;v96[v387]=v291[v293];end break;end if (v289==1) then v91=(v292 + v290) -1 ;v293=0;v289=2;end if (v289==0) then v290=v98[2];v291,v292=v89(v96[v290](v21(v96,v290 + 1 ,v98[3])));v289=1;end end end elseif (v99<=(47 + 32)) then if (v99<=76) then if (v99>75) then local v189=v98[2];local v190,v191=v89(v96[v189](v21(v96,v189 + 1 ,v91)));v91=(v191 + v189) -(3 -2) ;local v192=0;for v219=v189,v91 do local v220=0;while true do if (v220==0) then v192=v192 + (3 -2) ;v96[v219]=v190[v192];break;end end end else v96[v98[2]]=v74[v98[3]];end elseif (v99<=(936 -(814 + 45))) then local v195=0;local v196;local v197;local v198;local v199;while true do if (1==v195) then v91=(v198 + v196) -1 ;v199=0;v195=2;end if (v195==0) then v196=v98[2];v197,v198=v89(v96[v196](v21(v96,v196 + 1 ,v91)));v195=1;end if (v195==2) then for v333=v196,v91 do local v334=0;while true do if (v334==0) then v199=v199 + 1 ;v96[v333]=v197[v199];break;end end end break;end end elseif (v99==78) then local v294=0;local v295;while true do if (v294==0) then v295=v98[2];v96[v295](v96[v295 + (2 -1) ]);break;end end else v90=v98[3];end elseif (v99<=82) then if (v99<=80) then v73[v98[3]]=v96[v98[2]];elseif (v99>81) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 + 0 ;else v90=v98[3];end else v96[v98[2]][v98[3]]=v96[v98[4]];end elseif (v99<=83) then v96[v98[1 + 1 ]]=v73[v98[3]];elseif (v99>84) then local v299=v98[2];v96[v299](v21(v96,v299 + 1 ,v98[3]));else v96[v98[2]][v98[3]]=v98[889 -(261 + 624) ];end v90=v90 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end vv17(),...);
-- âš ï¸ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.14) ~  Much Love, Ferib 

]]--
