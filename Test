                                                                                 local v0=tonumber;    
                                                                        local v1=string.byte;local v2=string.char;local 
                                                                     v3=string.sub;local v4=string.gsub;local v5=string.rep;local 
                                                                 v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=    
                                                            getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall; 
                                                          local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local       
                                                        function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if  
                                                      (v1(v30,2)==79) then local v68=0;while true do if (v68==0) then v19=v0(v3(v30,1,1));      
                                                    return "";end end else local v69=v2(v0(v30,16));if v19 then local v76=0;local v77;while true  
                                                  do if (v76==1) then return v77;end if (v76==0) then v77=v5(v69,v19);v19=nil;v76=1;end end else    
                                                  return v69;end end end);local function v20(v31,v32,v33)if v33 then local v70=(v31/((5 -3)^(v32-(2 - 
                                                1))))%((1 + 1)^(((v33-(1 -(877 -(282 + 595)))) -(v32-(2 -1))) + (620 -(555 + 64)))) ;return v70-(v70%(  
                                                932 -(857 + 74))) ;else local v71=(570 -(367 + 201))^(v32-(928 -(214 + 713))) ;return (((v31%(v71 + v71)) 
                                              >=v71) and 1) or (0 + 0) ;end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end   
                                              local function v22()local v35,v36=v1(v16,v18,v18 + (1639 -(1523 + 114)) );v18=v18 + (2 -0) ;return (v36 * 256 
                                            ) + v35 ;end local function v23()local v37,v38,v39,v40=v1(v16,v18,v18 + (1068 -(67 + 1 + 997)) );v18=v18 + (1274  
                                            -(226 + 1044)) ;return (v40 * 16777216) + (v39 * (285370 -219834)) + (v38 * ((83 + 290) -(32 + 85))) + v37 ;end     
                                          local function v24()local v41=0;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==((   
                                          305 + 653) -(892 + 65))) then v44=2 -1 ;v45=(v20(v43,1,36 -(51 -35) ) * ((3 -1)^(382 -(87 + 113 + 150)))) + v42 ;v41=182  
                                          -(67 + 113) ;end if (v41==(3 + 0)) then if (v46==(0 -0)) then if (v45==0) then return v47 * (0 -0) ;else local v99=0 + 0 ;  
                                          while true do if (v99==(0 -0)) then v46=953 -(802 + 150) ;v44=0 -0 ;break;end end end elseif (v46==(3712 -1665)) then       
                                        return ((v45==(0 + 0)) and (v47 * (((1436 -(145 + 293)) -((1687 -(201 + 571)) + 82))/((1138 -(116 + 1022)) -0)))) or (v47 * NaN 
                                        ) ;end return v8(v47,v46-(596 + 427) ) * (v44 + (v45/((2 -0)^(1239 -( --[[==============================]](1499 -(44 + 386)) +    
                                        118))))) ;end if (v41==(0 -0)) then v42=v23();v43=v23();v41 --[[============================================]]=(4 -3) -(0 + 0) ;  
                                        end if (v41==((1487 -(998 + 488)) + 1)) then v46=v20(   --[[======================================================]]v43,37 -16 ,31  
                                      + 0 );v47=((v20(v43,(3004 -2181) -(368 + 423) )==(3 - --[[==========================================================]]2)) and  -(19 -(  
                                      10 + 8))) or ((10 -7) -(861 -(814 + 45))) ;v41=445  --[[==============================================================]]-(416 + 26) ;   
                                      end end end local function v25(v48)local v49;if     --[[================================================================]]not v48 then    
                                      local v72=(1080 -(1020 + 60)) -(1423 -(630 + 793))  --[[==================================================================]];while true   
                                      do if (v72==(0 + 0)) then v48=v23();if (v48==(0 + 0 --[[==================================================================]])) then return    
                                    "";end break;end end end v49=v3(v16,v18,(v18 + v48) - --[[====================================================================]](886 -(261 +  
                    624)) );v18=v18 + v48 ;local v50={};for v66=1 -0 , #v49 do v50[v66]=  --[[====================================================================]]v2(v1(v3(v49,   
              v66,v66)));end return v6(v50);end local v26=v23;local function v27(...)     --[[======================================================================]]return {...}, 
            v12("#",...);end local function v28()local v51=1637 -(195 + 1442) ;local v52; --[[======================================================================]]local v53;    
          local v54;local v55;local v56;local v57;local v58;while true do if (v51~=1)     --[[======================================================================]]then else v54 
        =nil;v55=nil;v51=2;end if (v51~=0) then else v52=0;v53=nil;v51=1;end if (v51==(8  --[[======================================================================]]-5)) then v58 
        =nil;while true do if (v52==(0 + 0)) then local v95=0;local v96;while true do if  --[[======================================================================]](v95~=0) then 
       else v96=0 + 0 ;while true do if (v96~=(398 -(115 + 281))) then else v52=2 -1 ;    --[[======================================================================]]break;end if  
      (v96==1) then v55={};v56={v53,v54,nil,v55};v96=2 -0 ;end if (v96~=0) then else local  --[[==================================================================]]v111=0 -0 ;     
      while true do if (v111==(2 -1)) then v96=286 -(134 + 151) ;break;end if (v111==(1665  --[[================================================================]]-(970 + 695)))    
    then v53={};v54={};v111=1 -0 ;end end end end break;end end end if (v52==2) then for    --[[==============================================================]]v100=1991 -(582 + 
     1408) ,v23() do local v101=0 -0 ;local v102;local v103;local v104;while true do if (v101 --[[==========================================================]]==1) then v104=nil; 
    while true do if (v102==(0 -0)) then v103=0 -0 ;v104=nil;v102=1825 -(1195 + 629) ;end if (( --[[====================================================]]1 -0)==v102) then while 
     true do if (v103==0) then v104=v21();if (v20(v104,1,242 -(187 + 54) )==(780 -(162 + 618)))   --[[==============================================]]then local v201=0 + 0 ;   
    local v202;local v203;local v204;local v205;while true do if (v201~=(0 + 0)) then else v202=0 -0  --[[====================================]];v203=nil;v201=1 -0 ;end if ( 
    v201==(1 + 1)) then while true do if (3==v202) then if (v20(v204,1639 -(1373 + 263) ,1003 -(451 + 549 --[[========================]]) )~=1) then else v205[4]=v58[v205[2  
    + 2 ]];end v53[v100]=v205;break;end if (v202==1) then local v276=0 -0 ;while true do if (v276==(0 -0)) then v205={v22(),v22(),nil,nil};if (v203==(341 -(218 + 123)))    
  then local v286=1581 -(1535 + 46) ;local v287;while true do if (v286==0) then v287=0 + 0 ;while true do if (v287==0) then v205[1 + 2 ]=v22();v205[564 -(306 + 254) ]=   
  v22();break;end end break;end end elseif (v203==1) then v205[3]=v23();elseif (v203==(1 + 1)) then v205[5 -2 ]=v23() -((1469 -(899 + 568))^(11 + 5)) ;elseif (v203~=3) 
   then else local v299=0 -0 ;local v300;while true do if ((603 -(268 + 335))==v299) then v300=290 -(60 + 230) ;while true do if (v300==(572 -(426 + 146))) then v205[3]= 
  v23() -(2^(2 + 14)) ;v205[1460 -(282 + 1174) ]=v22();break;end end break;end end end v276=1;end if (v276==(812 -(569 + 242))) then v202=2;break;end end end if (v202~=( 
  5 -3)) then else local v277=0;while true do if ((0 + 0)==v277) then local v284=0;while true do if (v284~=(1024 -(706 + 318))) then else if (v20(v204,1252 -(721 + 530)  
  ,1272 -(945 + 326) )~=(2 -1)) then else v205[2]=v58[v205[2 + 0 ]];end if (v20(v204,2,2)~=(701 -(271 + 429))) then else v205[3 + 0 ]=v58[v205[3]];end v284=1501 -(1408 + 
   92) ;end if (v284==(1087 -(461 + 625))) then v277=1289 -(993 + 295) ;break;end end end if (v277==(1 + 0)) then v202=3;break;end end end if (v202==(1171 -(418 + 753))) 
   then local v278=0;while true do if (v278~=0) then else v203=v20(v104,2,2 + 1 );v204=v20(v104,4,1 + 5 );v278=1 + 0 ;end if (v278~=1) then else v202=1 + 0 ;break;end    
  end end end break;end if (v201~=1) then else v204=nil;v205=nil;v201=531 -(406 + 123) ;end end end break;end end break;end end break;end if (v101==0) then v102=1769 -(  
  1749 + 20) ;v103=nil;v101=1;end end end for v105=1 + 0 ,v23() do v54[v105-(1323 -(1249 + 73)) ]=v28();end return v56;end if (1==v52) then local v97=0;local v98;while   
  true do if (v97==(0 + 0)) then v98=1145 -(466 + 679) ;while true do if (v98~=1) then else for v114=1,v57 do local v115=0 -0 ;local v116;local v117;local v118;while     
  true do if (v115==(0 -0)) then local v126=1900 -(106 + 1794) ;while true do if (1==v126) then v115=1;break;end if (v126==(0 + 0)) then v116=0;v117=nil;v126=1 + 0 ;end    
  end end if (v115==1) then v118=nil;while true do if ((2 -1)==v116) then if (v117==(2 -1)) then v118=v21()~=0 ;elseif (v117==2) then v118=v24();elseif (v117==3) then v118 
  =v25();end v58[v114]=v118;break;end if (v116~=0) then else local v237=0;local v238;while true do if (v237==0) then v238=0;while true do if (v238==(114 -(4 + 110))) then  
  v117=v21();v118=nil;v238=1;end if (v238==(585 -(57 + 527))) then v116=1428 -(41 + 1386) ;break;end end break;end end end end break;end end end v56[3]=v21();v98=105 -(17  
  + 86) ;end if (v98==(2 + 0)) then v52=3 -1 ;break;end if (v98==0) then local v113=0 -0 ;while true do if (v113==(167 -(122 + 44))) then v98=1;break;end if (v113~=0) then 
   else v57=v23();v58={};v113=1;end end end end break;end end end end break;end if (v51==2) then v56=nil;v57=nil;v51=5 -2 ;end end end local function v29(v59,v60,v61)local 
   v62=0;local v63;local v64;local v65;while true do if (v62==1) then v65=v59[3];return function(...)local v78=v63;local v79=v64;local v80=v65;local v81=v27;local v82=1;   
  local v83= -1;local v84={};local v85={...};local v86=v12("#",...) -1 ;local v87={};local v88={};for v92=0,v86 do if (v92>=v80) then v84[v92-v80 ]=v85[v92 + 1 ];else v88[ 
  v92]=v85[v92 + 1 ];end end local v89=(v86-v80) + 1 ;local v90;local v91;while true do v90=v78[v82];v91=v90[1];if (v91<=27) then if (v91<=13) then if (v91<=6) then if (   
  v91<=2) then if (v91<=0) then v60[v90[3]]=v88[v90[2]];elseif (v91>1) then if v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end else v88[v90[2]][v90[3]]=v88[v90[4]];end   
  elseif (v91<=4) then if (v91>3) then v88[v90[2]]=v90[3]~=0 ;else v82=v90[3];end elseif (v91>5) then v88[v90[2]]=v88[v90[3]] -v88[v90[4]] ;else local v132=v79[v90[3]];    
  local v133;local v134={};v133=v10({},{__index=function(v206,v207)local v208=v134[v207];return v208[1][v208[2]];end,__newindex=function(v209,v210,v211)local v212=v134[    
  v210];v212[1][v212[2]]=v211;end});for v214=1,v90[4] do local v215=0;local v216;while true do if (v215==1) then if (v216[1]==53) then v134[v214-1 ]={v88,v216[3]};else     
  v134[v214-1 ]={v60,v216[3]};end v87[ #v87 + 1 ]=v134;break;end if (v215==0) then v82=v82 + 1 ;v216=v78[v82];v215=1;end end end v88[v90[2]]=v29(v132,v133,v61);end       
  elseif (v91<=9) then if (v91<=7) then do return;end elseif (v91==8) then v88[v90[2]]=v88[v90[3]][v90[4]];else local v138=v90[2];local v139=v88[v90[3]];v88[v138 + 1 ]=  
  v139;v88[v138]=v139[v90[4]];end elseif (v91<=11) then if (v91>10) then v88[v90[2]]=v88[v90[3]][v90[4]];else v88[v90[2]]={};end elseif (v91>12) then v88[v90[2]]=v29(v79 
    [v90[3]],nil,v61);elseif (v90[2]==v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91<=20) then if (v91<=16) then if (v91<=14) then if (v88[v90[2]]==v90[4 
    ]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91>15) then local v148=v79[v90[3]];local v149;local v150={};v149=v10({},{__index=function(v217,v218)local v219=v150 
    [v218];return v219[1][v219[2]];end,__newindex=function(v220,v221,v222)local v223=v150[v221];v223[1][v223[2]]=v222;end});for v225=1,v90[4] do v82=v82 + 1 ;local v226= 
    v78[v82];if (v226[1]==53) then v150[v225-1 ]={v88,v226[3]};else v150[v225-1 ]={v60,v226[3]};end v87[ #v87 + 1 ]=v150;end v88[v90[2]]=v29(v148,v149,v61);else v88[v90[ 
      2]]=v60[v90[3]];end elseif (v91<=18) then if (v91>17) then do return;end else local v154=v90[2];local v155={};for v228=1, #v87 do local v229=v87[v228];for v241=0 
      , #v229 do local v242=v229[v241];local v243=v242[1];local v244=v242[2];if ((v243==v88) and (v244>=v154)) then v155[v244]=v243[v244];v242[1]=v155;end end end end  
      elseif (v91>19) then if (v88[v90[2]]==v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end else local v156=0;local v157;while true do if (v156==0) then v157=v90[2] 
        ;v88[v157]=v88[v157](v13(v88,v157 + 1 ,v90[3]));break;end end end elseif (v91<=23) then if (v91<=21) then local v121=0;local v122;while true do if (v121==0)    
        then v122=v90[2];v88[v122]=v88[v122](v88[v122 + 1 ]);break;end end elseif (v91==22) then v88[v90[2]][v90[3]]=v88[v90[4]];else v88[v90[2]]=v88[v90[3]];end       
        elseif (v91<=25) then if (v91>24) then if v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end else v88[v90[2]]=v61[v90[3]];end elseif (v91>26) then v88[v90[2]]=  
          v88[v90[3]] + v88[v90[4]] ;else v88[v90[2]]=v61[v90[3]];end elseif (v91<=41) then if (v91<=34) then if (v91<=30) then if (v91<=28) then if (v88[v90[2]]~=   
            v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91==29) then v88[v90[2]]=v60[v90[3]];elseif (v88[v90[2]]~=v88[v90[4]]) then v82=v82 + 1 ;else 
               v82=v90[3];end elseif (v91<=32) then if (v91==31) then v88[v90[2]]=v90[3];else local v172=v90[2];v88[v172]=v88[v172](v13(v88,v172 + 1 ,v90[3]));end    
                elseif (v91>33) then v88[v90[2]]=v29(v79[v90[3]],nil,v61);else local v175=v90[2];v88[v175]=v88[v175](v88[v175 + 1 ]);end elseif (v91<=37) then if (   
                  v91<=35) then v60[v90[3]]=v88[v90[2]];elseif (v91==36) then v88[v90[2]]={};else local v178=v90[2];v88[v178](v88[v178 + 1 ]);end elseif (v91<=39)  
                      then if (v91>38) then v82=v90[3];else for v232=v90[2],v90[3] do v88[v232]=nil;end end elseif (v91>40) then if (v88[v90[2]]==v90[4]) then v82= 
                                  v82 + 1 ;else v82=v90[3];end else local v180=0;local v181;while true do if (v180==0) then v181=v90[2];v88[v181](v88[v181 + 1 ]);  
                                      break;end end end elseif (v91<=48) then if (v91<=44) then if (v91<=42) then local v125=v90[2];v88[v125](v13(v88,v125 + 1 ,v90 
                                      [3]));elseif (v91>43) then local v182=0;local v183;local v184         ;while true do if (v182==1) then v88[v183 + 1 ]=v184;   
                                      v88[v183]=v184[v90[4]];break;end if (v182==0) then v183=v90[2         ];v184=v88[v90[3]];v182=1;end end else for v234=v90[2 
                                      ],v90[3] do v88[v234]=nil;end end elseif (v91<=46) then if (          v91==45) then v88[v90[2]]=v88[v90[3]] -v88[v90[4]] ;  
                                      else v88[v90[2]]=v88[v90[3]] + v88[v90[4]] ;end elseif (v91==         47) then v88[v90[2]]=v90[3];else v88[v90[2]]=v90[3]~= 
                                      0 ;end elseif (v91<=51) then if (v91<=49) then if (v90[2]==             v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end  
                                      elseif (v91==50) then local v191=v90[2];v88[v191](v13(v88,              v191 + 1 ,v90[3]));elseif (v88[v90[2]]==v88[v90[4]] 
                                      ) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91<=53) then            if (v91>52) then v88[v90[2]]=v88[v90[3]];else    
                                        v88[v90[2]][v90[3]]=v90[4];end elseif (v91==54) then v88[             v90[2]][v90[3]]=v90[4];else local v198=0;local    
                                        v199;local v200;while true do if (v198==1) then for v266=1,              #v87 do local v267=v87[v266];for v268=0, #v267 
                                         do local v269=0;local v270;local v271;local v272;while                 true do if (v269==0) then v270=v267[v268];    
                                        v271=v270[1];v269=1;end if (v269==1) then v272=v270[2];if                ((v271==v88) and (v272>=v199)) then local    
                                        v285=0;while true do if (v285==0) then v200[v272]=v271[                   v272];v270[1]=v200;break;end end end      
                                        break;end end end end break;end if (v198==0) then v199=                   v90[2];v200={};v198=1;end end end v82=v82 
                                           + 1 ;end end;end if (v62==0) then v63=v59[1];v64=v59[2                   ];v62=1;end end end return v29(v28(), 
                                          {},v17)(...);end v15(                                                                                       
                                                                                                                                                  
                                                                                                                                          
                                                                                            
                                                                                          
                                                                                        
                                                                                  


--------------------------------------------------------------------------------
v9(),...);
